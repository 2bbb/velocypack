* beat rapidjson!

* handle unsupported JSON types or out-of-bounds stuff in JasonDumper (JS)

* test long variants (presumably just use > 255 entries) (JS)

* test arrays/objects with few but long elements that exceed 64 KB (JS)

* finish implementation of JasonSlice for all types (JS)



* JasonValue, JasonArray, JasonObject c++ access

* implement BCD in Builder, Slice, Parser and Dumper

* implement optional lookup table support in Builder, Slice, Parser and Dumper


* support modification of Jason objects

* optional: support accessing arbitrary objects via JSONPointer etc.

* optional: support for other input encodings (e.g. UTF-16)

* optional: add SSE4 optimization for whitespace parsing (borrow from rapidjson)
